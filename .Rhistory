geom_vline(xintercept = profit_stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1) +
geom_vline(xintercept = profit_stats[6], linetype = "dashed", color = color_palette["max"], size = 1) +
theme_clean() +
ggtitle("Profit per Order") +
xlab("Profit") +
ylab("Density") +
scale_color_manual(name = "Statistics", values = color_palette, labels = c("Min", "Q1", "Median", "Mean", "Q3", "Max"))
# Plot for Product Price
plt7 <- data.clean %>%
ggplot(aes(x = Product.Price)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = product_price_stats[1], linetype = "dashed", color = color_palette["min"], size = 1) +
geom_vline(xintercept = product_price_stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1) +
geom_vline(xintercept = product_price_stats[3], linetype = "dashed", color = color_palette["median"], size = 1) +
geom_vline(xintercept = product_price_stats[4], linetype = "dashed", color = color_palette["mean"], size = 1) +
geom_vline(xintercept = product_price_stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1) +
geom_vline(xintercept = product_price_stats[6], linetype = "dashed", color = color_palette["max"], size = 1) +
theme_clean() +
ggtitle("Product Price") +
xlab("Price") +
ylab("Density") +
scale_color_manual(name = "Statistics", values = color_palette, labels = c("Min", "Q1", "Median", "Mean", "Q3", "Max"))
# Plot for Sales per Customer
plt8 <- data.clean %>%
ggplot(aes(x = Sales.per.customer)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = sales_per_customer_stats[1], linetype = "dashed", color = color_palette["min"], size = 1) +
geom_vline(xintercept = sales_per_customer_stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1) +
geom_vline(xintercept = sales_per_customer_stats[3], linetype = "dashed", color = color_palette["median"], size = 1) +
geom_vline(xintercept = sales_per_customer_stats[4], linetype = "dashed", color = color_palette["mean"], size = 1) +
geom_vline(xintercept = sales_per_customer_stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1) +
geom_vline(xintercept = sales_per_customer_stats[6], linetype = "dashed", color = color_palette["max"], size = 1) +
theme_clean() +
ggtitle("Sales per Customer") +
xlab("Sales") +
ylab("Density") +
scale_color_manual(name = "Statistics", values = color_palette, labels = c("Min", "Q1", "Median", "Mean", "Q3", "Max"))
# Create multiple plot
ggarrange(plt1,plt2,plt3,plt4,plt5,plt6,plt7,plt8,
nrow = 4, ncol = 2)
# Create a list of plots (you can repeat the process for plt2, plt3, etc.)
plots <- list(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8)
# Create legend plot
legend_data <- data.frame(
Statistic = c("Min", "Q1", "Median", "Mean", "Q3", "Max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Color)) +
geom_bar(stat = "identity", show.legend = FALSE) +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics")) +
scale_x_discrete(limits = legend_data$Statistic)
# Arrange all plots including the legend
combined_plot <- ggarrange(plotlist = plots, nrow = 4, ncol = 2, common.legend = TRUE, legend = "bottom")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(4, 0.5))
# Arrange all plots including the legend
combined_plot <- ggarrange(plotlist = plots, nrow = 4, ncol = 2, common.legend = TRUE, legend = "bottom")
combined_plot
final_plot
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(4, 0.5))
2: No shared levels found between `names(values)` of the manual scale and the data's fill values.
Warning messages:
1: No shared levels found between `names(values)` of the manual scale and the data's fill values.
2: No shared levels found between `names(values)` of the manual scale and the data's fill values.
# Create legend plot
legend_data <- data.frame(
Statistic = c("min", "Q1", "median", "mean", "Q3", "max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Color)) +
geom_bar(stat = "identity", show.legend = FALSE) +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics")) +
scale_x_discrete(limits = legend_data$Statistic)
# Arrange all plots including the legend
combined_plot <- ggarrange(plotlist = plots, nrow = 4, ncol = 2, common.legend = TRUE, legend = "bottom")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(4, 0.5))
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1.5, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1.5, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1.5, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1.5, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1.5, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1.5, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
# Create a legend manually
legend_data <- data.frame(
Statistic = c("Min", "Q1", "Median", "Mean", "Q3", "Max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Statistic)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics"))
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "bottom")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(4, 0.5))
final_plot
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "left")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
1,
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
# Create a legend manually
legend_data <- data.frame(
Statistic = c("Min", "Q1", "Median", "Mean", "Q3", "Max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Statistic)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics"))
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "left")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Create a blank plot for the legend
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1)) +
geom_rect(aes(xmin = as.numeric(Statistic) - 0.2, xmax = as.numeric(Statistic) + 0.2, ymin = 0, ymax = 0.2, fill = Statistic),
color = "black", size = 0.5) +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "none") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics")) +
geom_text(aes(label = Statistic, y = 0.1), size = 4, color = "black", vjust = -0.5) +
geom_segment(aes(x = as.numeric(Statistic) - 0.2, xend = as.numeric(Statistic) + 0.2,
y = 0.2, yend = 0.2), color = Color, linetype = "dashed", size = 1.5)
# Create a legend manually
legend_data <- data.frame(
Statistic = c("Min", "Q1", "Median", "Mean", "Q3", "Max"),
Color = c("red", "orange", "green", "blue", "purple", "black"),
stringsAsFactors = FALSE
)
# Create a blank plot for the legend
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1)) +
geom_rect(aes(xmin = as.numeric(Statistic) - 0.2, xmax = as.numeric(Statistic) + 0.2, ymin = 0, ymax = 0.2, fill = Statistic),
color = "black", size = 0.5) +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "none") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics")) +
geom_text(aes(label = Statistic, y = 0.1), size = 4, color = "black", vjust = -0.5) +
geom_segment(aes(x = as.numeric(Statistic) - 0.2, xend = as.numeric(Statistic) + 0.2,
y = 0.2, yend = 0.2), color = Color, linetype = "dashed", size = 1.5)
# Function to create a histogram with statistics
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["Min"], size = 1.5) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1.5) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["Median"], size = 1.5) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["Mean"], size = 1.5) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1.5) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["Max"], size = 1.5) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density") +
# Add a simple legend
annotate("text", x = Inf, y = Inf, label = "Legend:\nRed = Min\nOrange = Q1\nGreen = Median\nBlue = Mean\nPurple = Q3\nBlack = Max",
hjust = 1.1, vjust = 1.5, size = 4, color = "black", fontface = "italic",
fill = "white", alpha = 0.5, parse = TRUE)
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
# Arrange all plots
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2)
# Display the combined plot
print(combined_plot)
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1.5, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1.5, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1.5, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1.5, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
# Create a legend manually
legend_data <- data.frame(
Statistic = c("Min", "Q1", "Median", "Mean", "Q3", "Max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Statistic)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics"))
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "left")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
numeric.cols <- c("Sales",
"Sales.per.customer",
"Benefit.per.order",
"Product.Price",
"Order.Item.Discount",
"Order.Item.Product.Price",
"Order.Item.Profit.Ratio",
"Order.Item.Total")
# Create a legend manually
legend_data <- data.frame(
Statistic = c("min", "Q1", "median", "mean", "Q3", "max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Statistic)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics"))
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "left")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(2, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(4, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7, 1))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(10, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(9, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(8.5, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(8, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.5, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
create_plot <- function(data, x_var, title) {
stats <- calc_stats(data[[x_var]])
ggplot(data, aes_string(x = x_var)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black") +
geom_density(alpha = .4, fill = "#000000", bw = 100) +
geom_vline(xintercept = stats[1], linetype = "dashed", color = color_palette["min"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[2], linetype = "dashed", color = color_palette["Q1"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[3], linetype = "dashed", color = color_palette["median"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[4], linetype = "dashed", color = color_palette["mean"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[5], linetype = "dashed", color = color_palette["Q3"], size = 1, show.legend = TRUE) +
geom_vline(xintercept = stats[6], linetype = "dashed", color = color_palette["max"], size = 1, show.legend = TRUE) +
theme_clean() +
ggtitle(title) +
xlab(title) +
ylab("Density")
}
# Create plots for each variable
plt1 <- create_plot(data.clean, "Sales", "Sales")
plt2 <- create_plot(data.clean, "Benefit.per.order", "Benefit Per Order")
plt3 <- create_plot(data.clean, "Order.Item.Discount", "Discount per Order (%)")
plt4 <- create_plot(data.clean, "Order.Item.Product.Price", "Price of item per Order")
plt5 <- create_plot(data.clean, "Order.Item.Total", "Order Item Total")
plt6 <- create_plot(data.clean, "Order.Profit.Per.Order", "Profit per order")
plt7 <- create_plot(data.clean, "Product.Price", "Product Price")
plt8 <- create_plot(data.clean, "Sales.per.customer", "Sales per Customer")
# Create a legend manually
legend_data <- data.frame(
Statistic = c("min", "Q1", "median", "mean", "Q3", "max"),
Color = c("red", "orange", "green", "blue", "purple", "black")
)
legend_plot <- ggplot(legend_data, aes(x = Statistic, y = 1, fill = Statistic)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_palette) +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Statistics") +
guides(fill = guide_legend(title = "Statistics"))
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "left")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 2, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 4, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = TRUE, legend = "right")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
numeric.cols <- c("Sales",
"Sales.per.customer",
"Benefit.per.order",
"Product.Price",
"Order.Item.Discount",
"Order.Item.Product.Price",
"Order.Item.Profit.Ratio",
"Order.Item.Total")
combined_plot
# Arrange all plots including the legend
combined_plot <- ggarrange(plt1, plt2, plt3, plt4, plt5, plt6, plt7, plt8, nrow = 4, ncol = 2, common.legend = FALSE, legend = "right")
# Add the legend plot below the combined plots
final_plot <- ggarrange(combined_plot, legend_plot, ncol = 1, heights = c(7.8, 0.5))
# Display the final plot
print(final_plot)
